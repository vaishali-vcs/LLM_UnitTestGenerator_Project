# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import function6 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.exp(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.exp(var_0, bool_0)
    assert var_1 == 1
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    module_0.exp(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = -535.2154
    module_0.exp(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1590
    tuple_0 = (int_0,)
    set_0 = {tuple_0, tuple_0, int_0, int_0}
    var_0 = module_0.exp(set_0, int_0)
    module_0.exp(tuple_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -613
    var_0 = module_0.exp(int_0, int_0)
    assert var_0 == -613
    var_1 = module_0.exp(int_0, var_0)
    assert var_1 == -613
    var_2 = module_0.exp(int_0, int_0)
    assert var_2 == -613
    none_type_0 = None
    int_1 = 48
    var_3 = module_0.exp(var_2, var_2)
    assert var_3 == -613
    var_4 = module_0.exp(int_1, int_1)
    assert (
        var_4
        == 4534210299537961682180808569049236693950667198463497549253953177022167955081458532487395339415723896983803415136757188026208045584671516237254031458294588028406664809820457442004160800734485175068652344397664490337229310120620538210094904835026543301397829554350723553992201564875596423563723664680225494930264302078342461149388746108476384086209443078831994999311535335748515144811167108043672417910876894840782295801143206269462365517282335171126841649199086122514163942673356835116042928164834140683698875865375512807758305905075666142726882875758348931713075127987935242945435533031053222332101997060769730117457885808375849596366263907372801288696893535552536576
    )
    module_0.exp(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.exp(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.exp(var_0, var_0)
    assert var_1 == 1
    var_2 = module_0.exp(bool_0, var_0)
    assert var_2 == 0
    bool_1 = True
    var_3 = module_0.exp(bool_1, var_0)
    assert var_3 is True
    var_4 = module_0.exp(bool_1, bool_1)
    assert var_4 is True
    var_5 = module_0.exp(bool_0, bool_0)
    assert var_5 == 1
    var_6 = module_0.exp(var_5, var_3)
    assert var_6 == 1
    var_7 = module_0.exp(var_0, bool_0)
    assert var_7 == 1
    none_type_0 = None
    var_8 = module_0.exp(none_type_0, bool_0)
    assert var_8 == 1
    var_9 = module_0.exp(var_4, var_2)
    assert var_9 == 1
    var_10 = module_0.exp(bool_1, var_6)
    assert var_10 is True
    var_11 = module_0.exp(var_3, var_8)
    assert var_11 is True
    module_0.exp(var_8, none_type_0)
