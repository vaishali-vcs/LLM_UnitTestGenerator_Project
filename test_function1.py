# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import function1 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1032
    var_0 = module_0.checkPrime(int_0)
    assert var_0 is False
    module_0.is_palindrome(int_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.checkPrime(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1032
    module_0.factorial(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.checkPrime(bool_0)
    module_0.cubesum(bool_0)


def test_case_4():
    bool_0 = False
    var_0 = module_0.cubesum(bool_0)
    var_1 = module_0.checkPrime(bool_0)
    var_2 = module_0.cubesum(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 1570
    var_0 = module_0.checkPrime(int_0)
    assert var_0 is False
    var_1 = module_0.prodDigit(int_0)
    assert var_1 == 0
    var_2 = module_0.prodDigit(var_1)
    var_3 = module_0.checkPrime(var_0)
    module_0.remove_chars(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\x91\xf6sU\xc8\xb6"
    module_0.remove_chars(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    var_0 = module_0.factorial(bool_0)
    assert var_0 is True
    var_1 = module_0.checkPrime(bool_0)
    module_0.cubesum(var_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 1587
    var_0 = module_0.checkPrime(int_0)
    assert var_0 is True
    var_1 = module_0.prodDigit(int_0)
    assert var_1 == 7
    var_2 = module_0.prodDigit(var_1)
    assert var_2 == 7
    var_3 = module_0.checkPrime(var_0)
    module_0.remove_chars(var_0, var_0)
